spring.application.name=order-service

spring.config.import=optional:file:.env[.properties]

server.port=8085
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

#Circuit breaker
#Actuator (Giám sát)
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#Database
spring.datasource.url=${ORDER_SERVICE_DB_URL}
spring.datasource.username=${ORDER_SERVICE_DB_USER}
spring.datasource.password=${ORDER_SERVICE_DB_PASS}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.order_product.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.order_product.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.order_product.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.order_product.slidingWindowSize=20
resilience4j.circuitbreaker.instances.order_product.failureRateThreshold=50
resilience4j.circuitbreaker.instances.order_product.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.order_product.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.order_product.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.order_product.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.order_product.max-attempts=3
resilience4j.retry.instances.order_product.wait-duration=1s


management.tracing.enabled=true
#100% request sẽ được thu thập và gửi đi.
management.tracing.sampling.probability=1.0
# endpoint của zipkin server
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

#Kafka producer configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#Kafka consumer configuration
spring.kafka.consumer.group-id=orderId
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.package="*"

logging.level.org.hibernate=DEBUG
logging.level.org.springframework=DEBUG